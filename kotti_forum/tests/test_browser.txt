kotti_forum browser tests
========================

Setup and Login
---------------

  >>> import datetime
  >>> from dateutil.tz import tzutc
  >>> from kotti import testing
  >>> first_time_string = "2012-07-31 05:00:00"
  >>> first_date = datetime.datetime(2012, 7, 31, 5, 0, 0, tzinfo=tzutc())
  >>> second_time_string = "2012-07-31 06:00:00"
  >>> second_date = datetime.datetime(2012, 7, 31, 6, 0, 0, tzinfo=tzutc())
  >>> third_time_string = "2012-10-04 06:00:00"
  >>> third_date = datetime.datetime(2012, 10, 4, 6, 0, 0, tzinfo=tzutc())
  >>> sixth_time_string = "2012-10-07 06:00:00"
  >>> sixth_date = datetime.datetime(2012, 10, 7, 6, 0, 0, tzinfo=tzutc())
  >>> eighth_time_string = "2012-10-07 06:00:00"
  >>> eighth_date = datetime.datetime(2012, 10, 7, 6, 0, 0, tzinfo=tzutc())
  >>> def dc(content, name='/tmp/out.html'): open(name, 'w').write(content)
  >>> tools = testing.setUpFunctional(
  ...     **{'kotti.configurators': 'kotti_forum.kotti_configure'})
  >>> browser = tools['Browser']()
  >>> ctrl = browser.getControl

  >>> browser.open(testing.BASE_URL + '/@@login')
  >>> "Log in" in browser.contents
  True
  >>> ctrl("Username or email").value = "admin"
  >>> ctrl("Password").value = "secret"
  >>> ctrl(name="submit").click()
  >>> "Welcome, Administrator" in browser.contents
  True

Add a forum 
-------------------------

  >>> browser.open(testing.BASE_URL + '/@@add_forum')
  >>> ctrl("Title").value = "New Software Collection"
  >>> ctrl("Body").value = "This is the new forum"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True
  >>> browser.url == testing.BASE_URL + '/new-forum/'
  True

Add posts
--------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "First post"
  >>> ctrl("Body").value = "This post concerns throwing dice..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = first_time_string
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "Second post"
  >>> ctrl("Body").value = "This post is about hurricanes..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = second_time_string
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

Add a post using pypi source
----------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "kotti_forum"
  >>> ctrl("Body").value = "This post is about this very post..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_forum/json"
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "kotti_forum"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

Add a post with GitHub owner but not repo
-----------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "kotti_forum"
  >>> ctrl("Body").value = "This post is about this very post..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_forum/json"
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = ""
  >>> ctrl("save").click()
  >>> "To specifiy a GitHub repo, both owner and repo required" in browser.contents
  True
  >>> "Provide GitHub repo for api call" in browser.contents
  True

Add a post with GitHub repo but not owner
-----------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "kotti_forum"
  >>> ctrl("Body").value = "This post is about this very post..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_forum/json"
  >>> ctrl("GitHub Owner").value = ""
  >>> ctrl("GitHub Repo").value = "kotti_forum"
  >>> ctrl("save").click()
  >>> "To specifiy a GitHub repo, both owner and repo required" in browser.contents
  True
  >>> "Provide GitHub owner for api call" in browser.contents
  True

Add a post with Bitbucket owner but not repo
--------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "kotti_forum"
  >>> ctrl("Body").value = "This post is about this very post..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_forum/json"
  >>> ctrl("Bitbucket Owner").value = "geojeff"
  >>> ctrl("Bitbucket Repo").value = ""
  >>> ctrl("save").click()
  >>> "To specifiy a Bitbucket repo, both owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket repo for api call" in browser.contents
  True

Add a post with Bitbucket repo but not owner
--------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "kotti_forum"
  >>> ctrl("Body").value = "This post is about this very post..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/kotti_forum/json"
  >>> ctrl("Bitbucket Owner").value = ""
  >>> ctrl("Bitbucket Repo").value = "kotti_forum"
  >>> ctrl("save").click()
  >>> "To specifiy a Bitbucket repo, both owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket owner for api call" in browser.contents
  True

View forum and post
---------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/')
  >>> "First post" in browser.contents
  True
  >>> "Jul 31, 2012" in browser.contents
  True
  >>> pos = browser.contents.index
  >>> pos("Second post") < pos("First post")
  True
  >>> browser.getLink("Second post").click()
  >>> "This post is about hurricanes" in browser.contents
  True

Add a post with use_pypi_date but no pypi_url
---------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "Third post"
  >>> ctrl("Body").value = "This post concerns lions and tigers..."
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from PyPI, PyPI url required" in browser.contents
  True
  >>> "Provide PyPI url for fetching data" in browser.contents
  True

Add a post with desc to come from pypi, but no pypi_url
-------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "Fourth post"
  >>> ctrl("Body").value = "This post concerns cavemen and alligators..."
  >>> ctrl("Use description in PyPI data").selected = True
  >>> ctrl("PyPI URL").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from PyPI, PyPI url required" in browser.contents
  True
  >>> "Provide PyPI url for fetching data" in browser.contents
  True

Add a post with use_github_date but no GitHub owner, repo
---------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "Fifth post"
  >>> ctrl("Body").value = "This post concerns aardvarks and armadillos..."
  >>> ctrl("Use date in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = ""
  >>> ctrl("GitHub Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from GitHub, owner and repo required" in browser.contents
  True
  >>> "Provide GitHub owner for api call" in browser.contents
  True
  >>> "Provide GitHub repo for api call" in browser.contents
  True

Add a post with desc to come from GitHub, but no GitHub owner, repo
-------------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "Sixth post"
  >>> ctrl("Body").value = "This post concerns architects and lawyers..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = sixth_time_string
  >>> ctrl("Use description in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = ""
  >>> ctrl("GitHub Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from GitHub, owner and repo required" in browser.contents
  True
  >>> "Provide GitHub owner for api call" in browser.contents
  True
  >>> "Provide GitHub repo for api call" in browser.contents
  True

Add a post with use_bitbucket_date but no Bitbucket owner, repo
---------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "Seventh post"
  >>> ctrl("Body").value = "This post concerns lizards and frogs..."
  >>> ctrl("Use date in Bitbucket data").selected = True
  >>> ctrl("Bitbucket Owner").value = ""
  >>> ctrl("Bitbucket Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from Bitbucket, owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket owner for api call" in browser.contents
  True
  >>> "Provide Bitbucket repo for api call" in browser.contents
  True

Add a post with desc to come from Bitbucket, but no Bitbucket owner, repo
-------------------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@add_post')
  >>> ctrl("Title").value = "Eighth post"
  >>> ctrl("Body").value = "This post concerns dogs and cats..."
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = eighth_time_string
  >>> ctrl("Use description in Bitbucket data").selected = True
  >>> ctrl("Bitbucket Owner").value = ""
  >>> ctrl("Bitbucket Repo").value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from Bitbucket, owner and repo required" in browser.contents
  True
  >>> "Provide Bitbucket owner for api call" in browser.contents
  True
  >>> "Provide Bitbucket repo for api call" in browser.contents
  True

Edit forum and post and verify the changes
--------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/@@edit')
  >>> ctrl("Title").value = "This is the Software Collection"
  >>> ctrl("Body").value = "Hello, I am a forum"
  >>> ctrl("save").click()

  >>> browser.open(testing.BASE_URL + '/new-forum/first-post/@@edit')
  >>> ctrl("Title").value = "I was first, but now am an edited post"
  >>> ctrl("Description", index=0).value = "I am an edited post"
  >>> ctrl("Tags").value = "dice editing"
  >>> ctrl("Use entered date").selected = True
  >>> ctrl("Date", index=1).value = third_time_string
  >>> ctrl("Home Page URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Docs URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Download URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("Bugtracker URL").value = "http://kotti.pylonsproject.org"
  >>> ctrl("save").click()
  >>> "Your changes have been saved" in browser.contents
  True

Edit a post to change the pypi_url, forcing date to blank
---------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/first-post/@@edit')
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("Date", index=1).value = ""
  >>> ctrl("PyPI URL").value = "http://pypi.python.org/pypi/Kotti/json"
  >>> ctrl("save").click()

  >>> browser.open(testing.BASE_URL + '/new-forum/')
  >>> "Kotti" in browser.contents
  True

Edit a post with date *and* pypi_url changed
--------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/first-post/@@edit')
  >>> ctrl("Title").value = "Edited post"
  >>> ctrl("Use date in PyPI data").selected = True
  >>> ctrl("PyPI URL", index=0).value = ""
  >>> ctrl("save").click()
  >>> "For fetching date or description from PyPI, PyPI url required" in browser.contents
  True
  >>> "Provide PyPI url for fetching data" in browser.contents
  True

Edit a post with GitHub owner and repo changed
----------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/kotti_forum/@@edit')
  >>> ctrl("Title").value = "kotti_media"
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "kotti_media"
  >>> ctrl("save").click()
  >>> "kotti_media" in browser.contents
  True

Edit a post with Bitbucket owner and repo changed
-------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/new-forum/kotti_forum/@@edit')
  >>> ctrl("Title").value = "sphinx"
  >>> ctrl("Bitbucket Owner").value = "birkenfeld"
  >>> ctrl("Bitbucket Repo").value = "sphinx"
  >>> ctrl("save").click()
  >>> "sphinx" in browser.contents
  True

Add a forum with sorting changed
----------------------------------------------

  >>> browser.open(testing.BASE_URL + '/@@add_forum')
  >>> ctrl("Title").value = "Ordered GitHub Software Collection"
  >>> ctrl("Body").value = "This forum is GitHub only, ascending sorted"
  >>> ctrl("Ascending").selected = True
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True
  >>> browser.url == testing.BASE_URL + '/ordered-github-forum/'
  True

Add GitHub posts and one dated NOW; Test for ascending order
------------------------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/ordered-github-forum/@@add_post')
  >>> ctrl("Title").value = "GitHub kotti_forum"
  >>> ctrl("Body").value = "This post is about this very post on GitHub..."
  >>> ctrl("Use date in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "kotti_forum"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(testing.BASE_URL + '/ordered-github-forum/@@add_post')
  >>> ctrl("Title").value = "GitHub Kotti geojeff fork"
  >>> ctrl("Body").value = "This post is about Kotti forked on geojeff GitHub..."
  >>> ctrl("Use date in GitHub data").selected = True
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "Kotti"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(testing.BASE_URL + '/ordered-github-forum/@@add_post')
  >>> ctrl("Title").value = "kotti_forum dated NOW"
  >>> ctrl("Body").value = "This post is kotti_forum with a date of NOW..."
  >>> ctrl("Use current date and time").selected = True
  >>> ctrl("GitHub Owner").value = "geojeff"
  >>> ctrl("GitHub Repo").value = "kotti_forum"
  >>> ctrl("save").click()
  >>> "Successfully added item" in browser.contents
  True

  >>> browser.open(testing.BASE_URL + '/ordered-github-forum/')
  >>> "GitHub Kotti geojeff fork" in browser.contents
  True
  >>> "GitHub kotti_forum" in browser.contents
  True
  >>> pos = browser.contents.index
  >>> pos("kotti_forum dated NOW") > pos("GitHub kotti_forum")
  True
  >>> pos("kotti_forum dated NOW") > pos("GitHub Kotti geojeff fork")
  True

Edit the ordered forum to reverse sorting
-------------------------------------------------------

  >>> browser.open(testing.BASE_URL + '/ordered-github-forum/@@edit')
  >>> ctrl("Title").value = "I was descending, but now am ascending"
  >>> ctrl("Description").value = "I was descending, but now am ascending"
  >>> ctrl("Tags").value = "sorting order lists"
  >>> ctrl("Ascending").selected = True
  >>> ctrl("Descending").selected = False
  >>> ctrl("save").click()
  >>> "I was descending, but now am ascending" in browser.contents
  True
  >>> pos = browser.contents.index
  >>> pos("kotti_forum dated NOW") > pos("GitHub kotti_forum")
  True
  >>> pos("kotti_forum dated NOW") > pos("GitHub Kotti geojeff fork")
  True
